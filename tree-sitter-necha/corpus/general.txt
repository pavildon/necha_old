=======
let expr
=======
let a = 1 and
    b = a and
    c = add 2 b and
    d = true and
    e = false

let f = 1 

let g = 
  let h = 2
  and i = true
  in  * h i

let write = 0
let main = write a b

---
(source_file
  (let_expr
    def: (def
      ident: (identifier)
      number: (number))
    def: (def
      ident: (identifier)
      ident: (identifier))
    def: (def
      ident: (identifier)
      fn_call: (fn_call 
        ident: (identifier) 
        number: (number) 
        ident: (identifier)))
    def: (def
      ident: (identifier)
      boolean: (boolean))
    def: (def
      ident: (identifier)
      boolean: (boolean)))
  (let_expr
    def: (def
      ident: (identifier)
      number: (number)))
  (let_expr
    def: (def
      ident: (identifier)
      let_in: (let_in_expr
        def: (def
          ident: (identifier)
          number: (number))
        def: (def
          ident: (identifier)
          boolean: (boolean))
        calc: (calc
            mul: (mul)
            ident: (identifier)
            ident: (identifier)))))
      (let_expr
        def: (def
          ident: (identifier)
          number: (number)))
      (let_expr
        def: (def
          ident: (identifier)
          fn_call: (fn_call
            ident: (identifier)
            ident: (identifier)
            ident: (identifier)))))
